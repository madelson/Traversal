<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net45</TargetFrameworks>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningLevel>4</WarningLevel>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <LangVersion>8.0</LangVersion>
    <Nullable>enable</Nullable>

    <Version>1.0.1</Version>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <FileVersion>1.0.0.0</FileVersion>
    <Authors>Michael Adelson</Authors>
    <Copyright>Copyright Â© 2019 Michael Adelson</Copyright>
    <RootNamespace>Medallion.Collections</RootNamespace>

    <PackageId>Traverse</PackageId>
    <Description>
      Explore trees and tree-like structures with LINQ using tree-traversal algorithms like breadth-first and depth-first search:

      IEnumerable&lt;DirectoryInfo&gt; childDirectories = Traverse.DepthFirst(new DirectoryInfo(...), d =&gt; d.EnumerateDirectories());
      IEnumerable&lt;DirectoryInfo&gt; parentDirectories = Traverse.Along(new DirectoryInfo(...), d =&gt; d.Parent);
    </Description>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>breadth depth first preorder postorder tree graph traverse traversal enumerable dag linq</PackageTags>
    <PackageProjectUrl>https://github.com/madelson/Traverse</PackageProjectUrl>
    <PackageReleaseNotes>See https://github.com/madelson/Traverse#release-notes</PackageReleaseNotes>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
  </ItemGroup>


  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <NoWarn>1591</NoWarn>
    <Optimize>false</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Optimize>true</Optimize>
  </PropertyGroup>
</Project>
